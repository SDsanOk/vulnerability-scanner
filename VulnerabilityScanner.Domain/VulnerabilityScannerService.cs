using VulnerabilityScanner.Domain.Interfaces;
using VulnerabilityScanner.Models;

namespace VulnerabilityScanner.Domain;

public class VulnerabilityScannerService : IVulnerabilityScannerService
{
    private readonly IVulnerablePackagesProvider _vulnerablePackagesProvider;
    private readonly IVulnerablePackagesVersionFilter _packagesVersionFilter;

    public VulnerabilityScannerService(
        IVulnerablePackagesProvider vulnerablePackagesProvider,
        IVulnerablePackagesVersionFilter packagesVersionFilter)
    {
        _vulnerablePackagesProvider = vulnerablePackagesProvider;
        _packagesVersionFilter = packagesVersionFilter;
    }

    public async Task<IEnumerable<VulnerablePackage>> ScanProjectVulnerabilitiesAsync(
        Project project,
        CancellationToken cancellationToken)
    {
        var vulnerablePackages = await _vulnerablePackagesProvider.GetVulnerablePackagesAsync(project, cancellationToken);
        var filteredVulnerablePackages = _packagesVersionFilter.FilterPackagesByVersions(vulnerablePackages);

        return filteredVulnerablePackages;
    }
}
