using VulnerabilityScanner.DataAccess.GraphQL.Interfaces;
using VulnerabilityScanner.Models;
using VulnerabilityScanner.Models.Enums;

namespace VulnerabilityScanner.DataAccess.GraphQL.Parsers;

public class VulnerableVersionRangeParser : IParser<IEnumerable<VulnerableVersionRange>, string>
{
    private readonly IParser<EqualityOperator, string> _equalityOperatorParser;

    public VulnerableVersionRangeParser(IParser<EqualityOperator, string> equalityOperatorParser)
    {
        _equalityOperatorParser = equalityOperatorParser;
    }

    public IEnumerable<VulnerableVersionRange> Parse(string input)
    {
        var splittedInput = input.Split(", ");
        return splittedInput.Select(ParseVulnerableVersionRange);
    }

    private VulnerableVersionRange ParseVulnerableVersionRange(string input)
    {
        var splittedVersion = input.Split(' ');
        var equalityOperator = _equalityOperatorParser.Parse(splittedVersion.ElementAt(0));
        var version = Version.Parse(splittedVersion.ElementAt(1));

        return new VulnerableVersionRange
        {
            Operator = equalityOperator,
            Version = version
        };
    }
}
