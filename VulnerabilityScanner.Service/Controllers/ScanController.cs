using Microsoft.AspNetCore.Mvc;
using VulnerabilityScanner.Domain.Interfaces;
using VulnerabilityScanner.Models;
using VulnerabilityScanner.Service.Interfaces;
using VulnerabilityScanner.Service.Models.Requests;
using VulnerabilityScanner.Service.Models.Responses;

namespace VulnerabilityScanner.Service.Controllers;

[ApiController]
[ApiVersion("1")]
[Route("api/v{version:apiVersion}/scan")]
public class ScanController : ControllerBase
{
    private readonly IMapper<ScanRequest, Project> _projectMapper;
    private readonly IVulnerabilityScannerService _vulnerabilityScannerService;
    private readonly IMapper<IEnumerable<VulnerablePackage>, ScanResponse> _responseMapper;

    public ScanController(
        IMapper<ScanRequest, Project> projectMapper,
        IVulnerabilityScannerService vulnerabilityScannerService,
        IMapper<IEnumerable<VulnerablePackage>, ScanResponse> responseMapper)
    {
        _projectMapper = projectMapper;
        _vulnerabilityScannerService = vulnerabilityScannerService;
        _responseMapper = responseMapper;
    }

    [HttpPost]
    public async Task<IActionResult> PostAsync([FromBody] ScanRequest scanRequest, CancellationToken cancellationToken)
    {
        var project = _projectMapper.Map(scanRequest);
        var vulnerablePackages =
            await _vulnerabilityScannerService.ScanProjectVulnerabilitiesAsync(project, cancellationToken);

        var response = _responseMapper.Map(vulnerablePackages);
        return Ok(response);
    }
}
