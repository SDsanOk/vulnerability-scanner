using VulnerabilityScanner.Models;
using VulnerabilityScanner.Service.Interfaces;

namespace VulnerabilityScanner.Service.Parsers;

public class DependenciesParser : IDependenciesParser
{
    private readonly IEnumerable<IDependenciesParserStrategy> _strategies;
    private readonly ILogger<DependenciesParser> _logger;

    public DependenciesParser(IEnumerable<IDependenciesParserStrategy> strategies, ILogger<DependenciesParser> logger)
    {
        _strategies = strategies;
        _logger = logger;
    }

    public IEnumerable<ProjectDependency> ParseDependencies(ProjectEcosystem ecosystem, string fileContent)
    {
        var suitableStrategy = _strategies.FirstOrDefault(x => x.IsApplicable(ecosystem));
        if (suitableStrategy is null)
        {
            _logger.LogError("Can't find dependencies parser for ecosystem {ecosystem}", ecosystem);
            return ArraySegment<ProjectDependency>.Empty;
        }

        return suitableStrategy.Parse(fileContent);
    }
}
