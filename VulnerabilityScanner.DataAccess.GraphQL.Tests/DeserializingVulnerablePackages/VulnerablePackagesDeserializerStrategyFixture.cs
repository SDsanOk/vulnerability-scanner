using Moq;
using Newtonsoft.Json;
using VulnerabilityScanner.DataAccess.GraphQL.Deserializer.Strategies;
using VulnerabilityScanner.DataAccess.GraphQL.Interfaces;
using VulnerabilityScanner.DataAccess.GraphQL.Models;
using VulnerabilityScanner.Models;
using VulnerabilityScanner.Tests.Common;

namespace VulnerabilityScanner.DataAccess.GraphQL.Tests.DeserializingVulnerablePackages;

public class VulnerablePackagesDeserializerStrategyFixture : BaseFixture<VulnerablePackagesDeserializerStrategy>
{
    protected string GenerateVulnerabilitiesJson(IEnumerable<SecurityVulnerability> securityVulnerabilities) =>
        JsonConvert.SerializeObject(new
        {
            securityVulnerabilities = new
            {
                nodes = securityVulnerabilities
            }
        });

    protected void WithVulnerableVersionRange(VulnerableVersionRange expectedVersionRange)
    {
        Mocker
            .GetMock<IParser<IEnumerable<VulnerableVersionRange>, string>>()
            .Setup(x => x.Parse(It.IsAny<string>()))
            .Returns(new [] {expectedVersionRange});
    }
}
