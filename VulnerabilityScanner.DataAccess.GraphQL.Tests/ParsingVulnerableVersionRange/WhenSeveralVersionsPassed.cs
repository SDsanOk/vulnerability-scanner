using AutoFixture.Xunit2;
using FluentAssertions;
using VulnerabilityScanner.Models.Enums;
using Xunit;

namespace VulnerabilityScanner.DataAccess.GraphQL.Tests.ParsingVulnerableVersionRange;

public class WhenSeveralVersionsPassed : VulnerableVersionRangeParserFixture
{
    [Theory]
    [AutoData]
    public void ReturnSeveralCorrectVersion(EqualityOperator operatorInput, Version versionInput)
    {
        var inputString = $"{operatorInput} {versionInput}, {operatorInput} {versionInput}";
        WithEqualityOperator(operatorInput.ToString(), operatorInput);

        var result = Subject
            .Parse(inputString)
            .ToArray();

        result.Length.Should().Be(2);
        result.All(x => x.Version == versionInput).Should().BeTrue();
        result.All(x => x.Operator == operatorInput).Should().BeTrue();
    }
}
