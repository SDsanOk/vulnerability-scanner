using FluentAssertions;
using VulnerabilityScanner.Models.Enums;
using Xunit;

namespace VulnerabilityScanner.DataAccess.GraphQL.Tests.ParsingEqualityOperator;

public class WhenEqualityOperatorKnown : EqualityOperatorParserFixture
{
    public static IEnumerable<object[]> Data =>
        new List<object[]>
        {
            new object[] { "=", EqualityOperator.Equal },
            new object[] { ">=", EqualityOperator.GreaterOrEqual },
            new object[] { ">", EqualityOperator.Greater },
            new object[] { "<=", EqualityOperator.LessOrEqual },
            new object[] { "<", EqualityOperator.Less },
        };

    [Theory]
    [MemberData(nameof(Data))]
    public void ReturnCorrectOperator(string inputString, EqualityOperator expectedOperator)
    {
        var result = Subject.Parse(inputString);

        result.Should().Be(expectedOperator);
    }
}
